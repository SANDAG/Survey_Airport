<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data_model_output_select_tall_summaries' inline='true' name='federated.175334r0eeaj3q1g8ki5l0b42sl6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_model_output_select_tall_summaries' name='textscan.03gxltj1lrjeh11beo6qt0k5wclv'>
            <connection class='textscan' directory='/Users/wsp/Documents/GitHub/Survey_Airport/data/processed' filename='data_model_output_select_tall_summaries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.03gxltj1lrjeh11beo6qt0k5wclv' name='data_model_output_select_tall_summaries.csv' table='[data_model_output_select_tall_summaries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='unique_id' ordinal='0' />
            <column datatype='string' name='reason' ordinal='1' />
            <column datatype='boolean' name='value' ordinal='2' />
            <column datatype='real' name='weight_departing_and_arriving' ordinal='3' />
            <column datatype='real' name='weight_departing_only' ordinal='4' />
            <column datatype='real' name='weight_non_sas_departing_only' ordinal='5' />
            <column datatype='real' name='weight_departing_only_with_time_of_day' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unique_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[unique_id]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>unique_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[data_model_output_select_tall_summaries.csv_B0B56A4CC3644811892723BB2D787614]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reason]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>reason</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[data_model_output_select_tall_summaries.csv_B0B56A4CC3644811892723BB2D787614]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>11</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[data_model_output_select_tall_summaries.csv_B0B56A4CC3644811892723BB2D787614]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight_departing_and_arriving</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight_departing_and_arriving]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>weight_departing_and_arriving</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[data_model_output_select_tall_summaries.csv_B0B56A4CC3644811892723BB2D787614]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight_departing_only</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight_departing_only]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>weight_departing_only</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[data_model_output_select_tall_summaries.csv_B0B56A4CC3644811892723BB2D787614]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight_non_sas_departing_only</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight_non_sas_departing_only]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>weight_non_sas_departing_only</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[data_model_output_select_tall_summaries.csv_B0B56A4CC3644811892723BB2D787614]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight_departing_only_with_time_of_day</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight_departing_only_with_time_of_day]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>weight_departing_only_with_time_of_day</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[data_model_output_select_tall_summaries.csv_B0B56A4CC3644811892723BB2D787614]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='data_model_output_select_tall_summaries.csv' datatype='table' name='[__tableau_internal_object_id__].[data_model_output_select_tall_summaries.csv_B0B56A4CC3644811892723BB2D787614]' role='measure' type='quantitative' />
      <column caption='Reason for Not Using Transit' datatype='string' name='[reason]' role='dimension' type='nominal' />
      <column caption='Unique Id' datatype='integer' name='[unique_id]' role='dimension' type='ordinal' />
      <column caption='Value' datatype='boolean' name='[value]' role='dimension' type='nominal' />
      <column-instance column='[value]' derivation='None' name='[none:value:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:value:nk]' type='palette'>
            <map to='#638b66'>
              <bucket>true</bucket>
            </map>
            <map to='#b66353'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:value:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>true</bucket>
            </map>
            <map to='asterisk'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='data_model_output_select_tall_summaries.csv' id='data_model_output_select_tall_summaries.csv_B0B56A4CC3644811892723BB2D787614'>
            <properties context=''>
              <relation connection='textscan.03gxltj1lrjeh11beo6qt0k5wclv' name='data_model_output_select_tall_summaries.csv' table='[data_model_output_select_tall_summaries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='unique_id' ordinal='0' />
                  <column datatype='string' name='reason' ordinal='1' />
                  <column datatype='boolean' name='value' ordinal='2' />
                  <column datatype='real' name='weight_departing_and_arriving' ordinal='3' />
                  <column datatype='real' name='weight_departing_only' ordinal='4' />
                  <column datatype='real' name='weight_non_sas_departing_only' ordinal='5' />
                  <column datatype='real' name='weight_departing_only_with_time_of_day' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Reasons no Transit'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_model_output_select_tall_summaries' name='federated.175334r0eeaj3q1g8ki5l0b42sl6' />
          </datasources>
          <datasource-dependencies datasource='federated.175334r0eeaj3q1g8ki5l0b42sl6'>
            <column-instance column='[reason]' derivation='None' name='[none:reason:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='None' name='[none:value:nk]' pivot='key' type='nominal' />
            <column-instance column='[weight_departing_and_arriving]' derivation='Sum' name='[pcto:sum:weight_departing_and_arriving:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:value:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[weight_departing_and_arriving]' derivation='Sum' name='[pcto:sum:weight_departing_and_arriving:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Reason for Not Using Transit' datatype='string' name='[reason]' role='dimension' type='nominal' />
            <column caption='Value' datatype='boolean' name='[value]' role='dimension' type='nominal' />
            <column datatype='real' name='[weight_departing_and_arriving]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:reason:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:reason:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:reason:nk]' member='&quot;list&quot;' />
                <groupfilter function='member' level='[none:reason:nk]' member='&quot;List&quot;' />
                <groupfilter function='member' level='[none:reason:nk]' member='&quot;other&quot;' />
                <groupfilter function='member' level='[none:reason:nk]' member='&quot;Other&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:reason:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Not Convenient&quot;</bucket>
              <bucket>&quot;Dont Know How&quot;</bucket>
              <bucket>&quot;Prefer Other Mode&quot;</bucket>
              <bucket>&quot;Too Complicated&quot;</bucket>
              <bucket>&quot;Ride Too Long&quot;</bucket>
              <bucket>&quot;Too Many Transfers&quot;</bucket>
              <bucket>&quot;Not Reliable&quot;</bucket>
              <bucket>&quot;Stop Too Far&quot;</bucket>
              <bucket>&quot;Wait Too Long&quot;</bucket>
              <bucket>&quot;No Good Options&quot;</bucket>
              <bucket>&quot;Not Flexible&quot;</bucket>
              <bucket>&quot;Does Not Run When Needed&quot;</bucket>
              <bucket>&quot;Dislike Public Transport&quot;</bucket>
              <bucket>&quot;Not Safe&quot;</bucket>
              <bucket>&quot;Not Economical&quot;</bucket>
              <bucket>&quot;Dislike Public Transport With Luggage&quot;</bucket>
              <bucket>&quot;Dislike Crowded Trains Buses&quot;</bucket>
              <bucket>&quot;Too Much Walking Stairs&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:reason:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk]' scope='cols' value='Weighted Share of Air Passengers' />
            <encoding attr='space' class='0' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:reason:nk]' value='49' />
            <format attr='text-format' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk:1]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:reason:nk]' value='308' />
            <format attr='height-header' value='56' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:value:nk]' />
              <shape column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:value:nk]' />
              <text column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk:1]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='false' />
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk:1]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:reason:nk]</rows>
        <cols>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk]</cols>
      </table>
      <simple-id uuid='{9EF896BA-5FAE-41B9-BC01-2BD9E892E023}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Reasons no Transit' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:value:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:value:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:reason:nk]</field>
            <field>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:value:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CEF17C81-7703-4D4F-9A63-BB4776809EE2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Reasons no Transit' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
