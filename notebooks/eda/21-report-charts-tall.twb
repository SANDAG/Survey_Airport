<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data_model_output_select_tall_summaries' inline='true' name='federated.175334r0eeaj3q1g8ki5l0b42sl6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_model_output_select_tall_summaries' name='textscan.03gxltj1lrjeh11beo6qt0k5wclv'>
            <connection class='textscan' directory='/Users/wsp/Documents/GitHub/Survey_Airport/data/processed' filename='data_model_output_select_tall_summaries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.03gxltj1lrjeh11beo6qt0k5wclv' name='data_model_output_select_tall_summaries.csv' table='[data_model_output_select_tall_summaries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='unique_id' ordinal='0' />
            <column datatype='string' name='question' ordinal='1' />
            <column datatype='string' name='answer' ordinal='2' />
            <column datatype='string' name='question_type' ordinal='3' />
            <column datatype='real' name='weight_departing_and_arriving' ordinal='4' />
            <column datatype='real' name='weight_departing_only' ordinal='5' />
            <column datatype='real' name='weight_non_sas_departing_only' ordinal='6' />
            <column datatype='real' name='weight_departing_only_with_time_of_day' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unique_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[unique_id]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>unique_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>question</remote-name>
            <remote-type>129</remote-type>
            <local-name>[question]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>question</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>answer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[answer]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>answer</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>question_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[question_type]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>question_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight_departing_and_arriving</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight_departing_and_arriving]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>weight_departing_and_arriving</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight_departing_only</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight_departing_only]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>weight_departing_only</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight_non_sas_departing_only</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight_non_sas_departing_only]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>weight_non_sas_departing_only</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight_departing_only_with_time_of_day</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight_departing_only_with_time_of_day]</local-name>
            <parent-name>[data_model_output_select_tall_summaries.csv]</parent-name>
            <remote-alias>weight_departing_only_with_time_of_day</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Label Question' datatype='boolean' name='[Calculation_1364731487569276928]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(question, &quot;Label&quot;)' />
      </column>
      <column caption='Question Label' datatype='string' name='[Calculation_1364731487569637377]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REPLACE([question], &quot;Label&quot;, &quot;&quot;)' />
      </column>
      <column caption='data_model_output_select_tall_summaries.csv' datatype='table' name='[__tableau_internal_object_id__].[data_model_output_select_tall_summaries.csv_B0B56A4CC3644811892723BB2D787614]' role='measure' type='quantitative' />
      <column datatype='string' name='[answer]' role='dimension' type='nominal' />
      <column caption='Unique Id' datatype='integer' name='[unique_id]' role='dimension' type='ordinal' />
      <column-instance column='[answer]' derivation='None' name='[none:answer:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:answer:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>&quot;True&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>true</bucket>
            </map>
            <map to='asterisk'>
              <bucket>false</bucket>
            </map>
            <map to='circle'>
              <bucket>%null%</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;False&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:answer:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;NOT_IMPORTANT&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;True&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>true</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;SLIGHTLY_IMPORTANT&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;False&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>false</bucket>
            </map>
            <map to='#b9aa97'>
              <bucket>&quot;IMPORTANT&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;EXTREMELY_IMPORTANT&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;VERY_IMPORTANT&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:answer:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EXTREMELY_IMPORTANT&quot;</bucket>
            <bucket>&quot;VERY_IMPORTANT&quot;</bucket>
            <bucket>&quot;IMPORTANT&quot;</bucket>
            <bucket>&quot;SLIGHTLY_IMPORTANT&quot;</bucket>
            <bucket>&quot;NOT_IMPORTANT&quot;</bucket>
            <bucket>&quot;1.0&quot;</bucket>
            <bucket>&quot;2.0&quot;</bucket>
            <bucket>&quot;3.0&quot;</bucket>
            <bucket>&quot;4.0&quot;</bucket>
            <bucket>&quot;5.0&quot;</bucket>
            <bucket>&quot;Already had refugee van waiting&quot;</bucket>
            <bucket>&quot;Because I had a package deal&quot;</bucket>
            <bucket>&quot;Better option&quot;</bucket>
            <bucket>&quot;Can&apos;t go on base&quot;</bucket>
            <bucket>&quot;Car available&quot;</bucket>
            <bucket>&quot;Car rental&quot;</bucket>
            <bucket>&quot;Company provides transport&quot;</bucket>
            <bucket>&quot;Dah&quot;</bucket>
            <bucket>&quot;Did not know about it&quot;</bucket>
            <bucket>&quot;Did not need to&quot;</bucket>
            <bucket>&quot;Didn&apos;t know&quot;</bucket>
            <bucket>&quot;Didn&apos;t know about it&quot;</bucket>
            <bucket>&quot;Didn&apos;t think of it&quot;</bucket>
            <bucket>&quot;dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;dislike crowded trains buses, dislike public transport&quot;</bucket>
            <bucket>&quot;dislike crowded trains buses, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;dislike crowded trains buses, prefer other mode&quot;</bucket>
            <bucket>&quot;dislike crowded trains buses, too much walking stairs&quot;</bucket>
            <bucket>&quot;dislike public transport&quot;</bucket>
            <bucket>&quot;dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;dislike public transport with luggage, prefer other mode&quot;</bucket>
            <bucket>&quot;dislike public transport, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;dislike public transport, prefer other mode&quot;</bucket>
            <bucket>&quot;does not run when needed&quot;</bucket>
            <bucket>&quot;does not run when needed, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;does not run when needed, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;does not run when needed, not economical, prefer other mode&quot;</bucket>
            <bucket>&quot;does not run when needed, prefer other mode&quot;</bucket>
            <bucket>&quot;does not run when needed, stop too far&quot;</bucket>
            <bucket>&quot;does not run when needed, too many transfers&quot;</bucket>
            <bucket>&quot;does not run when needed, too many transfers, stop too far, dislike public transport&quot;</bucket>
            <bucket>&quot;Don&apos;t need it&quot;</bucket>
            <bucket>&quot;dont know how&quot;</bucket>
            <bucket>&quot;dont know how, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;dont know how, dislike public transport&quot;</bucket>
            <bucket>&quot;dont know how, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;dont know how, no good options&quot;</bucket>
            <bucket>&quot;dont know how, no good options, not flexible&quot;</bucket>
            <bucket>&quot;dont know how, not economical&quot;</bucket>
            <bucket>&quot;dont know how, not flexible&quot;</bucket>
            <bucket>&quot;dont know how, not flexible, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;dont know how, not flexible, not safe, too much walking stairs&quot;</bucket>
            <bucket>&quot;dont know how, not reliable&quot;</bucket>
            <bucket>&quot;dont know how, not reliable, does not run when needed&quot;</bucket>
            <bucket>&quot;dont know how, not reliable, ride too long, wait too long&quot;</bucket>
            <bucket>&quot;dont know how, not reliable, stop too far&quot;</bucket>
            <bucket>&quot;dont know how, not safe&quot;</bucket>
            <bucket>&quot;dont know how, not safe, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;dont know how, not safe, too much walking stairs, prefer other mode&quot;</bucket>
            <bucket>&quot;dont know how, prefer other mode&quot;</bucket>
            <bucket>&quot;dont know how, ride too long&quot;</bucket>
            <bucket>&quot;dont know how, too many transfers&quot;</bucket>
            <bucket>&quot;dont know how, too much walking stairs, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;dont know how, wait too long&quot;</bucket>
            <bucket>&quot;dont know how, wait too long, not economical, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;Dropped off&quot;</bucket>
            <bucket>&quot;Drove my car to parking lot and took uber&quot;</bucket>
            <bucket>&quot;Easier&quot;</bucket>
            <bucket>&quot;Easy access&quot;</bucket>
            <bucket>&quot;False&quot;</bucket>
            <bucket>&quot;Family always available&quot;</bucket>
            <bucket>&quot;Family could give ride&quot;</bucket>
            <bucket>&quot;Family dropped off&quot;</bucket>
            <bucket>&quot;Far&quot;</bucket>
            <bucket>&quot;Friend volunteered to drop me off&quot;</bucket>
            <bucket>&quot;Friends&quot;</bucket>
            <bucket>&quot;Got kids&quot;</bucket>
            <bucket>&quot;Had a friend to take me instead&quot;</bucket>
            <bucket>&quot;Had a rental&quot;</bucket>
            <bucket>&quot;Had a ride&quot;</bucket>
            <bucket>&quot;Have children with lots of bags&quot;</bucket>
            <bucket>&quot;La Jolla is too far&quot;</bucket>
            <bucket>&quot;Military provided transport&quot;</bucket>
            <bucket>&quot;More advertising&quot;</bucket>
            <bucket>&quot;More published&quot;</bucket>
            <bucket>&quot;N/a&quot;</bucket>
            <bucket>&quot;N\\a&quot;</bucket>
            <bucket>&quot;Needed car later&quot;</bucket>
            <bucket>&quot;Needed rental car for trips to SDSU&quot;</bucket>
            <bucket>&quot;No an option&quot;</bucket>
            <bucket>&quot;No busses in Carmel valley&quot;</bucket>
            <bucket>&quot;no good options&quot;</bucket>
            <bucket>&quot;no good options, does not run when needed&quot;</bucket>
            <bucket>&quot;no good options, not flexible&quot;</bucket>
            <bucket>&quot;no good options, not flexible, not reliable&quot;</bucket>
            <bucket>&quot;no good options, not reliable&quot;</bucket>
            <bucket>&quot;no good options, not safe&quot;</bucket>
            <bucket>&quot;no good options, prefer other mode&quot;</bucket>
            <bucket>&quot;no good options, ride too long&quot;</bucket>
            <bucket>&quot;no good options, ride too long, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;no good options, stop too far&quot;</bucket>
            <bucket>&quot;no good options, wait too long&quot;</bucket>
            <bucket>&quot;No information&quot;</bucket>
            <bucket>&quot;No need&quot;</bucket>
            <bucket>&quot;No particular reason&quot;</bucket>
            <bucket>&quot;No stop near home&quot;</bucket>
            <bucket>&quot;Not access near my house&quot;</bucket>
            <bucket>&quot;Not an option&quot;</bucket>
            <bucket>&quot;Not available from his City&quot;</bucket>
            <bucket>&quot;not convenient&quot;</bucket>
            <bucket>&quot;not convenient, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;not convenient, dislike crowded trains buses, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, dislike crowded trains buses, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, dislike crowded trains buses, too much walking stairs&quot;</bucket>
            <bucket>&quot;not convenient, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, dislike public transport, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, does not run when needed, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, does not run when needed, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, dont know how&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, dislike public transport with luggage, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, dislike public transport, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, no good options&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, no good options, not flexible, not reliable&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, no good options, not flexible, not reliable, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, no good options, not flexible, not reliable, stop too far, not economical&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, no good options, not reliable&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, no good options, not reliable, ride too long, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, no good options, not reliable, ride too long, wait too long, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, no good options, not safe, wait too long, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, no good options, too many transfers&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not flexible&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not flexible, not reliable&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not flexible, not reliable, not safe&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not flexible, not safe, dislike crowded trains buses, dislike public transport, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not flexible, ride too long&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not flexible, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not reliable&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not reliable, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not reliable, does not run when needed, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not reliable, ride too long&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not reliable, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not reliable, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not safe&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, not safe, ride too long, stop too far, dislike crowded trains buses, too much walking stairs, dislike public transport, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, ride too long&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, too many transfers, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, too much walking stairs&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, wait too long, dislike crowded trains buses, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, wait too long, dislike crowded trains buses, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, dont know how, wait too long, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, no good options&quot;</bucket>
            <bucket>&quot;not convenient, no good options, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;not convenient, no good options, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, no good options, dislike public transport, dislike public transport with luggage, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, no good options, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, no good options, does not run when needed, too much walking stairs&quot;</bucket>
            <bucket>&quot;not convenient, no good options, not flexible, not reliable&quot;</bucket>
            <bucket>&quot;not convenient, no good options, not flexible, not reliable, not safe, wait too long, too much walking stairs, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, no good options, not flexible, too many transfers, not economical&quot;</bucket>
            <bucket>&quot;not convenient, no good options, not reliable&quot;</bucket>
            <bucket>&quot;not convenient, no good options, not reliable, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, no good options, not reliable, ride too long&quot;</bucket>
            <bucket>&quot;not convenient, no good options, not reliable, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, no good options, not reliable, too much walking stairs&quot;</bucket>
            <bucket>&quot;not convenient, no good options, not reliable, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, no good options, not reliable, wait too long, dislike crowded trains buses, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, no good options, not safe&quot;</bucket>
            <bucket>&quot;not convenient, no good options, not safe, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, no good options, ride too long, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, no good options, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, not economical&quot;</bucket>
            <bucket>&quot;not convenient, not economical, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, not economical, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, not flexible&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, dislike crowded trains buses, too much walking stairs&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not economical&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not economical, too much walking stairs&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not reliable&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not reliable, dislike crowded trains buses, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not reliable, does not run when needed, not economical&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not reliable, not economical&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not reliable, not safe&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not reliable, not safe, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not reliable, not safe, wait too long, dislike crowded trains buses, dislike public transport, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not reliable, not safe, wait too long, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not safe&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not safe, too many transfers&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, not safe, too much walking stairs&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, ride too long&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, ride too long, dislike crowded trains buses, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, ride too long, not economical&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, ride too long, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, ride too long, wait too long, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, too many transfers, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, too many transfers, not economical&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, wait too long, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, wait too long, not economical&quot;</bucket>
            <bucket>&quot;not convenient, not flexible, wait too long, too many transfers&quot;</bucket>
            <bucket>&quot;not convenient, not reliable&quot;</bucket>
            <bucket>&quot;not convenient, not reliable, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, not reliable, not safe, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, not reliable, not safe, wait too long, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, not reliable, ride too long&quot;</bucket>
            <bucket>&quot;not convenient, not reliable, ride too long, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, not reliable, ride too long, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, not reliable, ride too long, does not run when needed, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, not reliable, ride too long, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, not reliable, ride too long, too many transfers&quot;</bucket>
            <bucket>&quot;not convenient, not reliable, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, not reliable, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, not safe&quot;</bucket>
            <bucket>&quot;not convenient, not safe, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;not convenient, not safe, dislike public transport, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, not safe, ride too long&quot;</bucket>
            <bucket>&quot;not convenient, not safe, stop too far, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, ride too long&quot;</bucket>
            <bucket>&quot;not convenient, ride too long, dislike crowded trains buses, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, ride too long, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, ride too long, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, ride too long, does not run when needed, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, ride too long, does not run when needed, not economical&quot;</bucket>
            <bucket>&quot;not convenient, ride too long, does not run when needed, too many transfers&quot;</bucket>
            <bucket>&quot;not convenient, ride too long, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, ride too long, too many transfers&quot;</bucket>
            <bucket>&quot;not convenient, ride too long, too many transfers, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, ride too long, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, ride too long, wait too long, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;not convenient, ride too long, wait too long, not economical&quot;</bucket>
            <bucket>&quot;not convenient, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, stop too far, not economical&quot;</bucket>
            <bucket>&quot;not convenient, too complicated&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, does not run when needed&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, no good options&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, no good options, not flexible, not reliable, not safe&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, no good options, not flexible, not reliable, ride too long, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, no good options, not reliable, too many transfers&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, no good options, not reliable, wait too long, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, no good options, ride too long, too many transfers, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, no good options, stop too far, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, not reliable, too many transfers, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, ride too long, too many transfers, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, too many transfers&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, too many transfers, dislike public transport, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, dont know how, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, no good options&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, no good options, not flexible, not reliable, does not run when needed, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, no good options, not flexible, not reliable, not safe, ride too long, wait too long, does not run when needed, too many transfers, dislike crowded trains buses, too much walking stairs, dislike public transport, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, no good options, not flexible, ride too long, too many transfers&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, no good options, not flexible, too many transfers, stop too far, not economical&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, no good options, not reliable&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, no good options, not reliable, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, no good options, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, not economical&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, not flexible&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, not flexible, not reliable&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, not flexible, ride too long&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, not flexible, too many transfers, dislike crowded trains buses, too much walking stairs, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, not reliable&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, not reliable, not safe, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, not safe&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, ride too long&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, ride too long, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, ride too long, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, ride too long, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, ride too long, wait too long, stop too far, dislike crowded trains buses, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, too many transfers&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, too many transfers, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, too many transfers, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, too many transfers, stop too far, not economical&quot;</bucket>
            <bucket>&quot;not convenient, too complicated, too many transfers, too much walking stairs, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, too many transfers&quot;</bucket>
            <bucket>&quot;not convenient, too many transfers, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, too many transfers, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, too many transfers, stop too far&quot;</bucket>
            <bucket>&quot;not convenient, too many transfers, stop too far, dislike crowded trains buses, dislike public transport, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, too many transfers, stop too far, dislike public transport, prefer other mode&quot;</bucket>
            <bucket>&quot;not convenient, too many transfers, stop too far, not economical&quot;</bucket>
            <bucket>&quot;not convenient, too many transfers, stop too far, not economical, dislike crowded trains buses, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, too much walking stairs&quot;</bucket>
            <bucket>&quot;not convenient, wait too long&quot;</bucket>
            <bucket>&quot;not convenient, wait too long, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;not convenient, wait too long, dislike crowded trains buses, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, wait too long, dislike public transport&quot;</bucket>
            <bucket>&quot;not convenient, wait too long, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not convenient, wait too long, not economical&quot;</bucket>
            <bucket>&quot;not convenient, wait too long, stop too far&quot;</bucket>
            <bucket>&quot;not economical&quot;</bucket>
            <bucket>&quot;not economical, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;not economical, too much walking stairs&quot;</bucket>
            <bucket>&quot;not flexible&quot;</bucket>
            <bucket>&quot;not flexible, does not run when needed&quot;</bucket>
            <bucket>&quot;not flexible, does not run when needed, too many transfers, stop too far&quot;</bucket>
            <bucket>&quot;not flexible, not reliable&quot;</bucket>
            <bucket>&quot;not flexible, not reliable, not safe&quot;</bucket>
            <bucket>&quot;not flexible, not reliable, not safe, wait too long&quot;</bucket>
            <bucket>&quot;not flexible, not reliable, wait too long&quot;</bucket>
            <bucket>&quot;not flexible, not safe, ride too long&quot;</bucket>
            <bucket>&quot;not flexible, prefer other mode&quot;</bucket>
            <bucket>&quot;not flexible, ride too long&quot;</bucket>
            <bucket>&quot;not flexible, stop too far&quot;</bucket>
            <bucket>&quot;not flexible, too many transfers&quot;</bucket>
            <bucket>&quot;not flexible, too much walking stairs&quot;</bucket>
            <bucket>&quot;not flexible, wait too long&quot;</bucket>
            <bucket>&quot;not flexible, wait too long, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;Not here&quot;</bucket>
            <bucket>&quot;not reliable&quot;</bucket>
            <bucket>&quot;not reliable, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not reliable, not safe&quot;</bucket>
            <bucket>&quot;not reliable, ride too long, wait too long, stop too far&quot;</bucket>
            <bucket>&quot;not reliable, wait too long&quot;</bucket>
            <bucket>&quot;not reliable, wait too long, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not safe&quot;</bucket>
            <bucket>&quot;not safe, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;not safe, dislike public transport&quot;</bucket>
            <bucket>&quot;not safe, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;not safe, prefer other mode&quot;</bucket>
            <bucket>&quot;not safe, ride too long, wait too long&quot;</bucket>
            <bucket>&quot;not safe, too many transfers&quot;</bucket>
            <bucket>&quot;not safe, too much walking stairs&quot;</bucket>
            <bucket>&quot;not safe, wait too long, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;Paratransit services&quot;</bucket>
            <bucket>&quot;Parents&quot;</bucket>
            <bucket>&quot;Picked up by family&quot;</bucket>
            <bucket>&quot;prefer other mode&quot;</bucket>
            <bucket>&quot;Rental&quot;</bucket>
            <bucket>&quot;Rental car&quot;</bucket>
            <bucket>&quot;Returned rental car&quot;</bucket>
            <bucket>&quot;ride too long&quot;</bucket>
            <bucket>&quot;ride too long, dislike crowded trains buses, dislike public transport, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;ride too long, dislike public transport&quot;</bucket>
            <bucket>&quot;ride too long, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;ride too long, not economical&quot;</bucket>
            <bucket>&quot;ride too long, prefer other mode&quot;</bucket>
            <bucket>&quot;ride too long, stop too far&quot;</bucket>
            <bucket>&quot;ride too long, too many transfers&quot;</bucket>
            <bucket>&quot;ride too long, too many transfers, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;ride too long, wait too long&quot;</bucket>
            <bucket>&quot;ride too long, wait too long, does not run when needed, stop too far&quot;</bucket>
            <bucket>&quot;ride too long, wait too long, stop too far&quot;</bucket>
            <bucket>&quot;ride too long, wait too long, too many transfers&quot;</bucket>
            <bucket>&quot;She is&quot;</bucket>
            <bucket>&quot;Special occasion&quot;</bucket>
            <bucket>&quot;Stayed in Mexico&quot;</bucket>
            <bucket>&quot;stop too far&quot;</bucket>
            <bucket>&quot;stop too far, not economical&quot;</bucket>
            <bucket>&quot;stop too far, prefer other mode&quot;</bucket>
            <bucket>&quot;stop too far, too much walking stairs&quot;</bucket>
            <bucket>&quot;too complicated&quot;</bucket>
            <bucket>&quot;too complicated, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;too complicated, does not run when needed, too much walking stairs&quot;</bucket>
            <bucket>&quot;too complicated, dont know how&quot;</bucket>
            <bucket>&quot;too complicated, dont know how, not flexible, does not run when needed&quot;</bucket>
            <bucket>&quot;too complicated, dont know how, not reliable, ride too long, stop too far&quot;</bucket>
            <bucket>&quot;too complicated, dont know how, stop too far, not economical&quot;</bucket>
            <bucket>&quot;too complicated, not flexible, stop too far, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;too complicated, not safe&quot;</bucket>
            <bucket>&quot;too complicated, not safe, dislike public transport&quot;</bucket>
            <bucket>&quot;too complicated, not safe, ride too long, wait too long, too many transfers, stop too far, dislike public transport, dislike public transport with luggage, prefer other mode&quot;</bucket>
            <bucket>&quot;too complicated, ride too long&quot;</bucket>
            <bucket>&quot;too complicated, ride too long, wait too long&quot;</bucket>
            <bucket>&quot;too complicated, stop too far&quot;</bucket>
            <bucket>&quot;too complicated, stop too far, not economical&quot;</bucket>
            <bucket>&quot;too complicated, too many transfers&quot;</bucket>
            <bucket>&quot;too complicated, too many transfers, stop too far, not economical&quot;</bucket>
            <bucket>&quot;too complicated, wait too long&quot;</bucket>
            <bucket>&quot;Too early&quot;</bucket>
            <bucket>&quot;Too easy to use the hotel shuttle&quot;</bucket>
            <bucket>&quot;Too lazy. Nothing broken with friend drop off&quot;</bucket>
            <bucket>&quot;too many transfers&quot;</bucket>
            <bucket>&quot;too many transfers, dislike crowded trains buses&quot;</bucket>
            <bucket>&quot;too many transfers, dislike public transport&quot;</bucket>
            <bucket>&quot;too many transfers, not economical&quot;</bucket>
            <bucket>&quot;too many transfers, prefer other mode&quot;</bucket>
            <bucket>&quot;too many transfers, stop too far&quot;</bucket>
            <bucket>&quot;too many transfers, too much walking stairs&quot;</bucket>
            <bucket>&quot;too much walking stairs&quot;</bucket>
            <bucket>&quot;too much walking stairs, dislike public transport, prefer other mode&quot;</bucket>
            <bucket>&quot;Too slow&quot;</bucket>
            <bucket>&quot;Traveling with my son&quot;</bucket>
            <bucket>&quot;True&quot;</bucket>
            <bucket>&quot;Unaware&quot;</bucket>
            <bucket>&quot;Used refugee van&quot;</bucket>
            <bucket>&quot;wait too long&quot;</bucket>
            <bucket>&quot;wait too long, dislike crowded trains buses, dislike public transport&quot;</bucket>
            <bucket>&quot;wait too long, dislike public transport with luggage&quot;</bucket>
            <bucket>&quot;wait too long, does not run when needed&quot;</bucket>
            <bucket>&quot;wait too long, not economical&quot;</bucket>
            <bucket>&quot;wait too long, prefer other mode&quot;</bucket>
            <bucket>&quot;Was told by hotel there&apos;s none&quot;</bucket>
            <bucket>&quot;Wasn&apos;t an option&quot;</bucket>
            <bucket>&quot;What transit?&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='data_model_output_select_tall_summaries.csv' id='data_model_output_select_tall_summaries.csv_B0B56A4CC3644811892723BB2D787614'>
            <properties context=''>
              <relation connection='textscan.03gxltj1lrjeh11beo6qt0k5wclv' name='data_model_output_select_tall_summaries.csv' table='[data_model_output_select_tall_summaries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='unique_id' ordinal='0' />
                  <column datatype='string' name='question' ordinal='1' />
                  <column datatype='string' name='answer' ordinal='2' />
                  <column datatype='string' name='question_type' ordinal='3' />
                  <column datatype='real' name='weight_departing_and_arriving' ordinal='4' />
                  <column datatype='real' name='weight_departing_only' ordinal='5' />
                  <column datatype='real' name='weight_non_sas_departing_only' ordinal='6' />
                  <column datatype='real' name='weight_departing_only_with_time_of_day' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Reasons no Transit'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_model_output_select_tall_summaries' name='federated.175334r0eeaj3q1g8ki5l0b42sl6' />
          </datasources>
          <datasource-dependencies datasource='federated.175334r0eeaj3q1g8ki5l0b42sl6'>
            <column datatype='string' name='[answer]' role='dimension' type='nominal' />
            <column-instance column='[answer]' derivation='None' name='[none:answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[question]' derivation='None' name='[none:question:nk]' pivot='key' type='nominal' />
            <column-instance column='[question_type]' derivation='None' name='[none:question_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[weight_departing_and_arriving]' derivation='Sum' name='[pcto:sum:weight_departing_and_arriving:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:answer:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[weight_departing_and_arriving]' derivation='Sum' name='[pcto:sum:weight_departing_and_arriving:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[question]' role='dimension' type='nominal' />
            <column datatype='string' name='[question_type]' role='dimension' type='nominal' />
            <column datatype='real' name='[weight_departing_and_arriving]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:question:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:question:nk]' member='&quot;list&quot;' />
                <groupfilter function='member' level='[none:question:nk]' member='&quot;List&quot;' />
                <groupfilter function='member' level='[none:question:nk]' member='&quot;other&quot;' />
                <groupfilter function='member' level='[none:question:nk]' member='&quot;Other&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Not Convenient&quot;</bucket>
              <bucket>&quot;Dont Know How&quot;</bucket>
              <bucket>&quot;Prefer Other Mode&quot;</bucket>
              <bucket>&quot;Too Complicated&quot;</bucket>
              <bucket>&quot;Ride Too Long&quot;</bucket>
              <bucket>&quot;Too Many Transfers&quot;</bucket>
              <bucket>&quot;Not Reliable&quot;</bucket>
              <bucket>&quot;Stop Too Far&quot;</bucket>
              <bucket>&quot;Wait Too Long&quot;</bucket>
              <bucket>&quot;No Good Options&quot;</bucket>
              <bucket>&quot;Not Flexible&quot;</bucket>
              <bucket>&quot;Does Not Run When Needed&quot;</bucket>
              <bucket>&quot;Dislike Public Transport&quot;</bucket>
              <bucket>&quot;Not Safe&quot;</bucket>
              <bucket>&quot;Not Economical&quot;</bucket>
              <bucket>&quot;Dislike Public Transport With Luggage&quot;</bucket>
              <bucket>&quot;Dislike Crowded Trains Buses&quot;</bucket>
              <bucket>&quot;Too Much Walking Stairs&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question_type:nk]'>
            <groupfilter function='member' level='[none:question_type:nk]' member='&quot;Reasons No Transit&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question:nk]</column>
            <column>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk]' scope='cols' value='Weighted Share of Air Passengers' />
            <encoding attr='space' class='0' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question:nk]' value='49' />
            <format attr='text-format' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question:nk]' value='308' />
            <format attr='height-header' value='56' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:answer:nk]' />
              <shape column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:answer:nk]' />
              <text column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk:2]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='false' />
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk:1]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question:nk]</rows>
        <cols>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk]</cols>
      </table>
      <simple-id uuid='{9EF896BA-5FAE-41B9-BC01-2BD9E892E023}' />
    </worksheet>
    <worksheet name='Stated Preference for Transit'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Stated Preference for Transit Features</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data_model_output_select_tall_summaries' name='federated.175334r0eeaj3q1g8ki5l0b42sl6' />
          </datasources>
          <datasource-dependencies datasource='federated.175334r0eeaj3q1g8ki5l0b42sl6'>
            <column caption='Label Question' datatype='boolean' name='[Calculation_1364731487569276928]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(question, &quot;Label&quot;)' />
            </column>
            <column caption='Question Label' datatype='string' name='[Calculation_1364731487569637377]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REPLACE([question], &quot;Label&quot;, &quot;&quot;)' />
            </column>
            <column datatype='string' name='[answer]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1364731487569276928]' derivation='None' name='[none:Calculation_1364731487569276928:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1364731487569637377]' derivation='None' name='[none:Calculation_1364731487569637377:nk]' pivot='key' type='nominal' />
            <column-instance column='[answer]' derivation='None' name='[none:answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[question_type]' derivation='None' name='[none:question_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[weight_departing_and_arriving]' derivation='Sum' name='[pcto:sum:weight_departing_and_arriving:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:answer:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[weight_departing_and_arriving]' derivation='Sum' name='[pcto:sum:weight_departing_and_arriving:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[answer]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[question]' role='dimension' type='nominal' />
            <column datatype='string' name='[question_type]' role='dimension' type='nominal' />
            <column datatype='real' name='[weight_departing_and_arriving]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:Calculation_1364731487569276928:nk]'>
            <groupfilter function='member' level='[none:Calculation_1364731487569276928:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:Calculation_1364731487569637377:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;No Delay &quot;</bucket>
              <bucket>&quot;Weekend Frequency &quot;</bucket>
              <bucket>&quot;Seats Transit &quot;</bucket>
              <bucket>&quot;Short Wait &quot;</bucket>
              <bucket>&quot;Late Night &quot;</bucket>
              <bucket>&quot;Early Morning &quot;</bucket>
              <bucket>&quot;Seats Transit Stop &quot;</bucket>
              <bucket>&quot;Luggage Rack &quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question_type:nk]'>
            <groupfilter function='member' level='[none:question_type:nk]' member='&quot;SP Feature&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question_type:nk]</column>
            <column>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:Calculation_1364731487569276928:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk:2]' scope='cols' value='Share of Departing Passengers' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:Calculation_1364731487569637377:nk]' value='108' />
            <format attr='text-format' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk:2]' value='p0.0%' />
            <format attr='text-format' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk:7]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:Calculation_1364731487569637377:nk]' value='252' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='14' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:answer:nk]' />
              <text column='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk:7]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:Calculation_1364731487569637377:nk]</rows>
        <cols>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[pcto:sum:weight_departing_and_arriving:qk:2]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{A6C434EA-6970-4594-BD9D-C6FFDE674D39}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Reasons no Transit' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='277'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:answer:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:answer:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question_type:nk]</field>
            <field>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:reason:nk]</field>
            <field>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:value:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CEF17C81-7703-4D4F-9A63-BB4776809EE2}' />
    </window>
    <window class='worksheet' maximized='true' name='Stated Preference for Transit' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:answer:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:Calculation_1364731487569276928:nk]</field>
            <field>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:Calculation_1364731487569637377:nk]</field>
            <field>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:answer:nk]</field>
            <field>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question:nk]</field>
            <field>[federated.175334r0eeaj3q1g8ki5l0b42sl6].[none:question_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F94B6A46-24CF-4568-A5CE-0A39F6C39B52}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Reasons no Transit' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Stated Preference for Transit' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3wc9Z3/8dcW7a6kXfUu25JcJPcud2zcMG4YMM0YCISaQLjkjvzuLrnc
      8btfLpdLwiWEhIRiwAY5BGzLNm6S3LFwL9hqltVl9V63aHfn94dgsXCTjWQJ5vN8PPx4aGfn
      O/MZzWreM99Zz1ejKIqCEEII1dH2dQFCCCH6hgSAEEKolASAEEKolASAAMDlcvXp+p1OJ06n
      s09rALDb7X1dQr+ooT/sj/5QA/SP/dFbNUgACCGESkkACCGESkkACCGESkkACCGESkkACCGE
      SkkACCGESun7ugDRP/zbH9aSnV/a12V4JE6e0Ncl9IooQwvRxpa+LkMIQK4AhBBCtSQAhBBC
      pSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBC
      pSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAellpaSl5eXme13a7neLi4m61zczM5OjRo5w+
      fZqWlus/Q3779u03XacQQn1kQJheduLECc6cOcNPf/pTzGYzLS0tHD16lJiYmOu2TU1N5fbb
      b6exsZHXX3+dO++8k3Hjxl11/pKSkp4s3WPUsBgeWDybtnZbZ13pJzmTXXDZfH5mH/7zxUf5
      cMcBjpzJ4eHlc4kMDaKorIqNKYcA+NGjK3jz7zuwOzp6pdYv5Wd/zqc7N2EwmnC73dz92POY
      /QM879ttVtI2vU99dSVut5tBQ4cz766HSEv+gPrqSiIGxDJn6X0oisKmd//I8tXPYjCaerVm
      tTp1NpsNn6RhMBiw2x288ORDREeGAdDY1MK//PJVHrlvKbOmdh0k6Fd/WIPL7QLAZnMQMyCS
      pQtv4833N6IBfvj9BwkLCeL0uRzKKqpZdsfsW71p/Z4EwC2wYMECduzYwQMPPNBlut1uZ/fu
      3dTX15OYmMjw4cO7vK/X65kwofNDP3PmTH7/+98zatQodDodhw4dorCwkDFjxnjm+VJTUxOH
      Dx+moaGBuLg4pk6dSnFxMXq9ngEDBgBw5swZ4uPj8fHxuW79cdERbEpN5/Ocyw/6l3r83oUc
      PXseo5cXvt4mAiy+vPLORn7y+D3odFqmjx/B2fOFvX7wBziw7WNW/+jnGE3e5J47xdF9O5h/
      98Oe95vqaxkxYSpDRnQGatJrv6K+ppK2pkYefPYlPnrzFVxOJ5mnDjNkxFg5+PeimroGfvFP
      z+JtMpJXWMrWXfv5wROdfytvf7CJ6ZPHYXc4Lmv3sx8/6fl57YdbGZkwhE9SD/DCkw/R3m4l
      Zd9nPHzvYnbs/pT/88ITt2x7vk2kC+gWGDp0KA0NDdTW1naZnpSURExMDPfeey979+6lrKzs
      qsswGAzExcVRUVHBgQMHsNvtrFq1irNnz1JYWNhl3vb2duLj41m2bBn5+fnk5ubi6+vLtm3b
      AHC73ezZswdvb+9u1R8dHkx9Uwt63dU/LpPHxFNV20hJRQ0AXl56bPbOA72jw4mPycTYhDgO
      Hj+HRqPp1nq/Cb/AECpKC3G7XZQWnCckIrrL+2FRAz0H/7bWZtpbm9FqdRhMpi/qN2CztlOQ
      fZaxU+fgdrt7vWa1WjR3Bt4mIwAZOXlEhIcAcOTEWSLCQogdGHnN9m3tVrJyC5g8fiR2ewc+
      JhPe3ibsdgc7dh/i7sXzbsln7ttIrgBukeXLl/PJJ5+wfPlyABRFwWq1Mnr0aADuuOMOzp07
      R3R09FWXodPpcLlcZGVlsWDBAoqLi4mLiyM7O5u4uDjPfKGhoRw/fpyzZ8/S0tJCbW0tCQkJ
      ANTX11NVVcXIkSO7/UdRXF7NivnTMfuYMBoNvLZuC/VNX92T8DEZWTI7kV/99W9MHT8CgMbm
      VgL8fHlo6RwAFs6YwNHPc/j5cw+hAO9tSqWsqq77v8AbdNud97D+9V8TEBSCy+1m9pKVV5yv
      8HwGaZs+YOmqp/APCqG1qZE9W/4GwMlP0xgxYSofvPZLNGi484EnCI0c0Gs1q5nN7uDNdRvQ
      6/U89737aGu38knKAV7+5x/w2bEz12y7ddd+li+ag0ajYe7Myfzx7fW4XG7unDeDjJx8yitr
      2L77UwID/Hj6kXtv0RZ9O0gA3CJRUVF4eXnddD+92+2mqKiIZcuW4XK5qKurQ6PRYDAYPCHy
      pS1bthAVFcX8+fPJzc3FZuvsu587dy4HDx6kubnZE0TdsevTE/Bp589j4mNZMX86725K9bz/
      8PK51De1sGDGRIYMikSr1VBcXs0f1m4mIiQAnU7HlLEJjEmI468fbker0XDn7ETWbd59U7+L
      61EUhU+S3uAHv3gFk7cPRblZpHz8HssefqbLfCc/TSP33CkeffHf8PY1A7DyqZ/QUFOJy+Uk
      58xxCrLPsuLRH+B2uzm2byeL7n+8V2pWs5bWdv7zd29wz9J5zEjsvCpb++FWgoMCSNn7GRcK
      inG7FWIHRjEkdmCXtlabnZOfZ/Pg3YsAGDsqngHREWg1Gj5M3sXdS+byt007+T8vPM4rr6/D
      ZrNj+uJqQ0gX0C21bNkyduzYAYBGo8FkMpGVlYXVaiUtLe2yA7nb7aa8vJycnBzWrFnDtGnT
      MBqNjBw5kvr6ekaPHk1wcDCtra1d2jU2NhIbG4vL5eLMma/OnuLj4yksLMRmsxEYGNjtuiND
      gzw/O10u3ErX7pDUQ6fYc/g0xeVV1DQ0UdvQTEubtbP+6nruv/M2tu07ik6rxely43K70Wp7
      75JcURRcLidGU2cXV0Bw55n9pRrrqsk48RkPPvdTz8EfOq+ygsOjOLB9A9MXLMPtdqHV6tBq
      ddIN1EveWZ/Mow8s9Rz8ARYvmMUdc6cTOyiK0JAgQoID8LOYL2u7I+1TFi+YiVb71aEsKMCP
      guKLRIaH4Ovj43lPq9XiVpTe36BvEbkC6GUjRozAbO784AYEBLB48WJMX/Qzr169mtTUVE6c
      OMGcOXM8N2i/NGnSJE6ePInBYGDx4sWe9+fNm8eRI0f45JNPCA4OZsaMGQAkJiYCcPfdd5OS
      koKXlxfTp0/3rF+j0RAfH094ePgNbcNd86fhb/GluaWdgZGh/O+7mzB46Xn1337AD/7jNUoq
      qj3zBgX4odNqqWtsBmDhzImcyLiA3dHB/mNn+cGqpQD8bdv+G6rhRmi1WibMmMfa3/9fQiOi
      qSgtZOmqp+hw2Hnt31/kH3/9BsUXsmlurOPvf/2tp93SVU/hFxjMiYOpxI+dhMFoYvz0uWx5
      /y8AzF/x8NVWKb6BjJw8Wlrb2LprPwCjEoZwz9L5nvfr6htxudyEBgdy4kwWBz47wT/98DE6
      OpykHz/Db//jJ12WZ3d0sHnHXv79p8+h1+lwuxVef+fv6HU6fLzlZv6lNIoikagWeXl5bN++
      neeffx69vmv2/+sr75CdX3rVtiajAZPBi8aWthtap06rxXXJmbPBq3O9jg7nNdslTp5wzfe7
      w9nRQVtrM34BgWg03b/YdbmcaLU6zz0Sh8MOChiM37zrIMrQQrTx+v+nQ9w8RVFwu93odDrP
      65bWNixmX7kZ/DVyBaAiZWVlrF69+rKDf3fY7A5s9su/inc9rq91m1zvwN+T9F5e+AcG33A7
      na7r78dgkD7jbxONRuM5+H/5+krdR0ICQFXmzJnT1yUIIfoRuQkshBAqJQEghBAqJQEghBAq
      JQEghBAqJQEghBAqJQEghBAqJQEghBAqJQEghBAqJQEghBAqJQEghBAqJQEghBAqJQEghBAq
      JQEghBAqJeMBCADS0k9S19h3z6n/crStL0dvioq69kDgvcXldKK7icdld5dFZ8dPd+3Hajtd
      TvS6vn1Q79f3h1prgP6xP3qrBgkAAYDL5eryDPVbzensHCfgZsYq6El2ux1jDwz88m2voT/s
      j/5QA/SP/dFbNUgXkBBCqJQEgBBCqJQEgBBCqJQEgBBCqJQEgBBCqJQEgBBCqJQEgBBCqJQE
      gBBCqJQEgBBCqJQEgBBCqJQEgBBCqJQEgBBCqFTfPmVJ9Bv/9oe1ZOeX9nUZHlFREUT30RNB
      uyvK0EK0se+eoCrEjQjQ1DHR61iXaXIFIIQQKiUBIIQQKiUBIIQQKiUBIIQQKiUBIIQQKiUB
      IIQQKiUBIIQQKiUBIIQQKiUBIIQQKiUBIIQQKiUBIIQQKiUBIIQQKiUBIIQQKiUBIIQQKiUB
      IIQQKtUvA6Cjo4O8vDzP67q6OnJycjyvGxoaqKysvKFl7ty5s8fq27t3L1ar1fPa7XZz9OhR
      z7+srKweW5foHrfb3dcliJtwvf0m+7V39csBYfR6PZs3b+all14C4NChQ2RkZPCzn/0MjUbD
      kSNHiIuLIyIiotvLLCkp6bH6ysrKcLlcntcul4v9+/dz5513AmAwGHpsXf3BqGExPLB4Nm3t
      NgBS009yJrugyzz/+MS96HU6ANqsNv6c9AkPL59LZGgQRWVVbEw5BMCPHl3Bm3/fgd3R0SO1
      dTgcbF77Z2ztrSiKwuwlK4mNH9VlnvrqCnZvXk/EwDhmL74XgLTkD6ivriRiQCxzlt6Hoihs
      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
      SkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGE
      SkkACCGESkkACCGESkkACCGESkkACCGESsl4AAKAvOKyPh2hy+XuHL9Yp9V5plks5lteR0dH
      B15efTtgfX+owfXFsKE6bd+cI1p0DtxffCa0l3wm+kJ/2B+9VYMEgADA5XKh0/XdH5rT6QRA
      r+/bYartdjtGo1H1NfSH/dEfaoD+sT96qwbpAhJCCJWSABBCCJWSABBCCJWSABBCCJWSABBC
      CJWSABBCCJWSABBCCJWSABBCCJWSABBCCJWSABBCCJWSABBCCJXq24dsiH6j8GJlv3sYXE+5
      kYfKfZcf/HUjbvRhcAatC6PG1aM1yMPger8GCQABwJoNKWTnl/Z1Gb0icfKEvi7hOy/K0EK0
      saWvyxA3SLqAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBC
      pSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAhBBCpSQAesDp06dpaGi4
      7nxOp5PW1tZuL3fXrl1kZmZ6Xufn51Na2vnM/m3btmG326/aNj09nZycnMumNzY2oihKt2u4
      ETqdliGDIokKC77qPJGhQcTHRuNjMnqmhQb5Exxg8bzWaDT4W3x7pca+0tRQ2+X3bre2c7Eg
      l5qK0ivuD6ezg+aGOs8/h90GgLWtleryruM2NDfW927x4pay2x1k5xZSXlnjmaYoCsUXK7hQ
      UILLdeWBd1rb2snOLaS+ockzraPDSX7RRZzOr9o0NbfS4XQCoHv55Zdf7p3NUI8jR44QGhqK
      n5/fNeerqalh//79jBgxolvL3blzJ7m5uUyePBmdTkd2djZOp5OIiAj8/f2xWCxoNJorti0q
      KsLHx4fQ0NAu05OSkhgzZgw6XddRlvYcPk1tQ3O36roSi683v3h+NVqNltEJscycOIpjZ893
      mefpBxYzNDYaP7MPDy29ndLKWqLDg7lr3jQmjBpKXUMzdY0tLLptEoF+Zkoqaq6ythsTHRXZ
      I8u5GQ211ez48G22r3+L2UtWotFoKCvKY8ff1+DscFB4PoMzn+1j9OSZXdrlnDnGni1/o7by
      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
      JACEEEKh/h86MhyBLCESqAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
